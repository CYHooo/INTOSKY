// Generated by gencpp from file deepsky/Navigate.msg
// DO NOT EDIT!


#ifndef DEEPSKY_MESSAGE_NAVIGATE_H
#define DEEPSKY_MESSAGE_NAVIGATE_H

#include <ros/service_traits.h>


#include <deepsky/NavigateRequest.h>
#include <deepsky/NavigateResponse.h>


namespace deepsky
{

struct Navigate
{

typedef NavigateRequest Request;
typedef NavigateResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Navigate
} // namespace deepsky


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::deepsky::Navigate > {
  static const char* value()
  {
    return "6ac3a30f22a4e8702a119fea10e8875b";
  }

  static const char* value(const ::deepsky::Navigate&) { return value(); }
};

template<>
struct DataType< ::deepsky::Navigate > {
  static const char* value()
  {
    return "deepsky/Navigate";
  }

  static const char* value(const ::deepsky::Navigate&) { return value(); }
};


// service_traits::MD5Sum< ::deepsky::NavigateRequest> should match
// service_traits::MD5Sum< ::deepsky::Navigate >
template<>
struct MD5Sum< ::deepsky::NavigateRequest>
{
  static const char* value()
  {
    return MD5Sum< ::deepsky::Navigate >::value();
  }
  static const char* value(const ::deepsky::NavigateRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::deepsky::NavigateRequest> should match
// service_traits::DataType< ::deepsky::Navigate >
template<>
struct DataType< ::deepsky::NavigateRequest>
{
  static const char* value()
  {
    return DataType< ::deepsky::Navigate >::value();
  }
  static const char* value(const ::deepsky::NavigateRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::deepsky::NavigateResponse> should match
// service_traits::MD5Sum< ::deepsky::Navigate >
template<>
struct MD5Sum< ::deepsky::NavigateResponse>
{
  static const char* value()
  {
    return MD5Sum< ::deepsky::Navigate >::value();
  }
  static const char* value(const ::deepsky::NavigateResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::deepsky::NavigateResponse> should match
// service_traits::DataType< ::deepsky::Navigate >
template<>
struct DataType< ::deepsky::NavigateResponse>
{
  static const char* value()
  {
    return DataType< ::deepsky::Navigate >::value();
  }
  static const char* value(const ::deepsky::NavigateResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // DEEPSKY_MESSAGE_NAVIGATE_H
